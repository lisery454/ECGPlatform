<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ECGPlatform">
	<!--  WindowControlButton  -->
	<Style x:Key="WindowControlButton"
	       TargetType="{x:Type Button}">
		<Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
		<Setter Property="FontFamily" Value="{StaticResource ChillRoundGothicRegular}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Width" Value="60" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Height" Value="30" />
		<Setter Property="Foreground" Value="{DynamicResource BrushGray10}" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border Background="{TemplateBinding Background}"
						        WindowChrome.IsHitTestVisibleInChrome="False">
							<Path x:Name="PathIcon" Margin="0,0"
							      HorizontalAlignment="Center"
							      VerticalAlignment="Center"
							      Data="{Binding Path=(local:IconHelper.Icon), RelativeSource={RelativeSource TemplatedParent}}"
							      Fill="{DynamicResource BrushBlack80}"
							      Stretch="None">
								<Path.RenderTransform>
									<TranslateTransform X="-3" Y="-3" />
								</Path.RenderTransform>
							</Path>
						</Border>
						<Border Background="Transparent"
						        Margin="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState, Converter={x:Static local:WindowStateToControlButtonMarginConverter.Instance}}"
						        WindowChrome.IsHitTestVisibleInChrome="True" />
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource BrushBlack10}" />
							<Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource BrushPrimary90}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  WindowControlCloseButton  -->
	<Style x:Key="WindowControlCloseButton"
	       BasedOn="{StaticResource WindowControlButton}"
	       TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border Background="{TemplateBinding Background}"
						        WindowChrome.IsHitTestVisibleInChrome="False">
							<Path x:Name="PathIcon" Margin="0,0"
							      HorizontalAlignment="Center"
							      VerticalAlignment="Center"
							      Data="{Binding Path=(local:IconHelper.Icon), RelativeSource={RelativeSource TemplatedParent}}"
							      Fill="{DynamicResource BrushBlack80}"
							      Stretch="None">
								<Path.RenderTransform>
									<TranslateTransform X="-3" Y="-3" />
								</Path.RenderTransform>
							</Path>
						</Border>
						<Border Background="Transparent"
						        Margin="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState, Converter={x:Static local:WindowStateToControlButtonMarginConverter.Instance}}"
						        WindowChrome.IsHitTestVisibleInChrome="True" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource BrushError}" />
							<Setter TargetName="PathIcon" Property="Fill" Value="{DynamicResource BrushOnError}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  SimpleButtonStyle  -->
	<Style TargetType="Button" x:Key="SimpleButtonStyle">
		<Setter Property="Background" Value="{StaticResource BrushPrimary80}" />
		<Setter Property="FontFamily" Value="{StaticResource ChillRoundGothicRegular}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<Border CornerRadius="10"
						        Background="{TemplateBinding Background}"
						        x:Name="border">
							<TextBlock Text="{TemplateBinding Content}"
							           Foreground="{DynamicResource BrushBlack80}"
							           Margin="10" HorizontalAlignment="Center"
							           VerticalAlignment="Center" TextAlignment="Center"
							           FontFamily="{TemplateBinding FontFamily}"
							           FontSize="{TemplateBinding FontSize}" />
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" SourceName="border" Value="True">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource BrushPrimary40}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>